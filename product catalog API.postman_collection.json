{
	"info": {
		"_postman_id": "10477960-2b41-4e6f-8020-b1ba7ad910c2",
		"name": "product catalog API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33000660"
	},
	"item": [
		{
			"name": "categoy",
			"item": [
				{
					"name": "Create Category",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Fruits",
									"type": "text"
								},
								{
									"key": "parent_category_id",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/categories",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"categories"
							]
						},
						"description": "### Create a New Category\n\nThis endpoint allows you to create a new category.\n\n#### Request Body\n\n- `name` (text): The name of the category.\n    \n- `parent_category_id` (text): The ID of the parent category, if applicable.\n    \n\n#### Response (201 - Created)\n\nThe response will be in JSON format with the following schema:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\"type\": \"string\"},\n        \"parent_category_id\": {\"type\": [\"string\", \"null\"]},\n        \"updated_at\": {\"type\": \"string\"},\n        \"created_at\": {\"type\": \"string\"},\n        \"id\": {\"type\": \"integer\"}\n    }\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "Update Category",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "Fruits updated",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/categories/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"categories",
								"2"
							]
						},
						"description": "### Update Category\n\nThis endpoint is used to update a specific category by making an HTTP PUT request to the specified URL.\n\n#### Request Body\n\n- name (text): Description of the category.\n    \n\n#### Response\n\nThe response of this request can be documented as a JSON schema:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\"\n        },\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"parent_category_id\": {\n            \"type\": [\"integer\", \"null\"]\n        },\n        \"created_at\": {\n            \"type\": \"string\"\n        },\n        \"updated_at\": {\n            \"type\": \"string\"\n        },\n        \"deleted_at\": {\n            \"type\": [\"string\", \"null\"]\n        }\n    }\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "List Categories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/v1/categories",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"categories"
							]
						},
						"description": "### Get Categories\n\nThis endpoint sends an HTTP GET request to retrieve a list of categories.\n\n#### Request Body\n\nThis request does not require a request body.\n\n#### Response\n\n- Status: 200\n    \n- Content-Type: application/json\n    \n\n##### Response Body\n\n``` json\n{\n    \"current_page\": 0,\n    \"data\": [\n        {\n            \"id\": 0,\n            \"name\": \"\",\n            \"parent_category_id\": null,\n            \"created_at\": \"\",\n            \"updated_at\": \"\",\n            \"deleted_at\": null\n        }\n    ],\n    \"first_page_url\": \"\",\n    \"from\": 0,\n    \"last_page\": 0,\n    \"last_page_url\": \"\",\n    \"links\": [\n        {\n            \"url\": null,\n            \"label\": \"\",\n            \"active\": true\n        }\n    ],\n    \"next_page_url\": null,\n    \"path\": \"\",\n    \"per_page\": 0,\n    \"prev_page_url\": null,\n    \"to\": 0,\n    \"total\": 0\n}\n\n ```\n\nThis response contains an array of category objects with their respective attributes."
					},
					"response": []
				},
				{
					"name": "Get Category Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/v1/categories/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"categories",
								"2"
							]
						},
						"description": "### Retrieve Category Details\n\nThis endpoint retrieves the details of a specific category.\n\n#### Request\n\n- Method: GET\n    \n- URL: `{{url}}/api/v1/categories/2`\n    \n\n#### Response\n\nThe response will be a JSON object with the following schema:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"parent_category_id\": {\n            \"type\": [\"string\", \"null\"]\n        }\n    }\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "Delete Category",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/v1/categories/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"categories",
								"2"
							]
						},
						"description": "### Delete Category\n\nThis endpoint is used to delete a specific category by its ID.\n\n#### Request Body\n\nThis request does not require a request body.\n\n#### Response Body\n\n- `deleted`: A boolean indicating whether the category was successfully deleted.\n    \n\n#### Response\n\n- Status: 200\n    \n- Content-Type: application/json"
					},
					"response": []
				}
			]
		},
		{
			"name": "product",
			"item": [
				{
					"name": "Create Product",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "Shirt",
									"type": "text"
								},
								{
									"key": "description",
									"value": "It is a Shirt",
									"type": "text"
								},
								{
									"key": "sku",
									"value": "sku1004",
									"type": "text"
								},
								{
									"key": "price",
									"value": "110",
									"type": "text"
								},
								{
									"key": "category_id",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/products",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							]
						},
						"description": "### Create a New Product\n\nThis endpoint allows you to create a new product by sending a POST request to the specified URL.\n\n#### Request Body Parameters\n\n- `name` (text) - The name of the product.\n    \n- `description` (text) - The description of the product.\n    \n- `sku` (text) - The stock keeping unit (SKU) of the product.\n    \n- `price` (text) - The price of the product.\n    \n- `category_id` (text) - The ID of the category to which the product belongs.\n    \n\n#### Response (JSON Schema)\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": { \"type\": \"string\" },\n    \"description\": { \"type\": \"string\" },\n    \"sku\": { \"type\": \"string\" },\n    \"price\": { \"type\": \"number\" },\n    \"category_id\": { \"type\": \"number\" },\n    \"updated_at\": { \"type\": \"string\" },\n    \"created_at\": { \"type\": \"string\" },\n    \"id\": { \"type\": \"number\" }\n  }\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "Update Product",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "Jeans",
									"type": "text"
								},
								{
									"key": "description",
									"value": "It is a Jeans",
									"type": "text"
								},
								{
									"key": "sku",
									"value": "sku1002",
									"type": "text"
								},
								{
									"key": "price",
									"value": "110",
									"type": "text"
								},
								{
									"key": "category_id",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/products/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"2"
							]
						},
						"description": "### Update Product Details\n\nThis endpoint allows the client to update the details of a specific product.\n\n#### Request\n\n- Method: PUT\n    \n- Endpoint: `{{url}}/api/v1/products/2`\n    \n- Body (x-www-form-urlencoded):\n    \n    - `name` (text): The updated name of the product.\n        \n    - `description` (text): The updated description of the product.\n        \n    - `sku` (text): The updated stock keeping unit (SKU) of the product.\n        \n    - `price` (text): The updated price of the product.\n        \n    - `category_id` (text): The updated category ID of the product.\n        \n\n#### Response\n\nThe response is in JSON format with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"updated\": {\n      \"type\": \"boolean\"\n    }\n  }\n}\n\n ```\n\n- Status: 200\n    \n- Content-Type: application/json\n    \n- { \"updated\": true}"
					},
					"response": []
				},
				{
					"name": "List Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/v1/products",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							]
						},
						"description": "### API Request Description\n\nThis API endpoint sends an HTTP GET request to retrieve a list of products.\n\n### Request Body\n\nThis request does not require a request body.\n\n### Response Body\n\nThe response is in JSON format and includes the following schema:\n\n``` json\n{\n  \"current_page\": number,\n  \"data\": [\n    {\n      \"id\": number,\n      \"name\": string,\n      \"description\": string,\n      \"sku\": string,\n      \"price\": string,\n      \"category_id\": number,\n      \"created_at\": string,\n      \"updated_at\": string,\n      \"deleted_at\": string | null\n    }\n  ],\n  \"first_page_url\": string,\n  \"from\": number,\n  \"last_page\": number,\n  \"last_page_url\": string,\n  \"links\": [\n    {\n      \"url\": string | null,\n      \"label\": string,\n      \"active\": boolean\n    }\n  ],\n  \"next_page_url\": string | null,\n  \"path\": string,\n  \"per_page\": number,\n  \"prev_page_url\": string | null,\n  \"to\": number,\n  \"total\": number\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "Search Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/v1/products?search=Orange",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							],
							"query": [
								{
									"key": "search",
									"value": "Orange"
								}
							]
						},
						"description": "### API Request Description\n\nThis API endpoint sends an HTTP GET request to retrieve a list of products filtered by the search parameter \"Orange\".\n\n### Request Body\n\nThis request does not require a request body.\n\n### Response Body\n\nThe response is in JSON format and includes the following schema:\n\n``` json\n{\n  \"current_page\": number,\n  \"data\": [\n    {\n      \"id\": number,\n      \"name\": string,\n      \"description\": string,\n      \"sku\": string,\n      \"price\": string,\n      \"category_id\": number,\n      \"created_at\": string,\n      \"updated_at\": string,\n      \"deleted_at\": string | null\n    }\n  ],\n  \"first_page_url\": string,\n  \"from\": number,\n  \"last_page\": number,\n  \"last_page_url\": string,\n  \"links\": [\n    {\n      \"url\": string | null,\n      \"label\": string,\n      \"active\": boolean\n    }\n  ],\n  \"next_page_url\": string | null,\n  \"path\": string,\n  \"per_page\": number,\n  \"prev_page_url\": string | null,\n  \"to\": number,\n  \"total\": number\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "Filter Products by category",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/v1/products?category_id=1",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							],
							"query": [
								{
									"key": "category_id",
									"value": "1"
								}
							]
						},
						"description": "### Get Products by Category ID\n\nThis endpoint retrieves a list of products based on the provided category ID.\n\n#### Request\n\n- Method: GET\n    \n- URL: `{{url}}/api/v1/products`\n    \n- Query Parameters:\n    \n    - `category_id` (integer, required): The ID of the category for which products are to be retrieved.\n        \n\n#### Response\n\n- Status: 200\n    \n- Content-Type: application/json\n    \n\nExample Response Body:\n\n``` json\n{\n  \"current_page\": 0,\n  \"data\": [\n    {\n      \"id\": 0,\n      \"name\": \"\",\n      \"description\": \"\",\n      \"sku\": \"\",\n      \"price\": \"\",\n      \"category_id\": 0,\n      \"created_at\": \"\",\n      \"updated_at\": \"\",\n      \"deleted_at\": null\n    }\n  ],\n  \"first_page_url\": \"\",\n  \"from\": 0,\n  \"last_page\": 0,\n  \"last_page_url\": \"\",\n  \"links\": [\n    {\n      \"url\": null,\n      \"label\": \"\",\n      \"active\": true\n    }\n  ],\n  \"next_page_url\": null,\n  \"path\": \"\",\n  \"per_page\": 0,\n  \"prev_page_url\": null,\n  \"to\": 0,\n  \"total\": 0\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "Get Product Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/v1/products/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"1"
							]
						},
						"description": "### Retrieve Product Details\n\nThis endpoint retrieves the details of a specific product by providing the product ID in the URL.\n\n#### Request\n\n- Method: GET\n    \n- URL: {{url}}/api/v1/products/1\n    \n\n#### Response\n\nThe response will be a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"description\": {\n      \"type\": \"string\"\n    },\n    \"sku\": {\n      \"type\": \"string\"\n    },\n    \"price\": {\n      \"type\": \"number\"\n    },\n    \"category_id\": {\n      \"type\": \"number\"\n    }\n  }\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "Delete Products",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/v1/products/4",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"4"
							]
						},
						"description": "The API endpoint sends an HTTP DELETE request to delete a product with the ID 4.\n\n### Response\n\nThe response is in JSON format and has the following schema:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"deleted\": {\n            \"type\": \"boolean\"\n        }\n    },\n    \"required\": [\"deleted\"]\n}\n\n ```"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "http://productcatalog.test",
			"type": "string"
		}
	]
}